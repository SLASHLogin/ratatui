on:
  push:
    branches:
      - feat-wrapping
      - main
  pull_request:
    branches:
      - main
      - feat-wrapping
  merge_group:


name: CI

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        toolchain: [ "1.65.0", "stable" ]
    runs-on: ${{ matrix.os }}
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install cargo-make
        uses: taiki-e/install-action@cargo-make
      - name: "Check"
        run: cargo make check
        env:
          RUST_BACKTRACE: full
          CARGO_HUSKY_DONT_INSTALL_HOOKS: true

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install cargo-make
        uses: taiki-e/install-action@cargo-make
      - name: "Clippy"
        run: cargo make clippy
        env:
          RUST_BACKTRACE: full
          CARGO_HUSKY_DONT_INSTALL_HOOKS: true

  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        toolchain: [ "1.65.0", "stable" ]
    runs-on: ${{ matrix.os }}
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install cargo-make
        uses: taiki-e/install-action@cargo-make
      - name: "Test"
        run: cargo make test
        env:
          RUST_BACKTRACE: full
          CARGO_HUSKY_DONT_INSTALL_HOOKS: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
      - name: Checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Check conventional commits"
        uses: crate-ci/committed@master
        with:
          args: "-vv"
          commits: "HEAD"
      - name: "Check typos"
        uses: crate-ci/typos@master
      - name: "Lint dependencies"
        uses: EmbarkStudios/cargo-deny-action@v1
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: "Formatting"
        run: cargo fmt --all --check

  coverage:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo llvm-cov
        run: cargo llvm-cov --all-features --lcov --output-path lcov.info
        env:
          CARGO_HUSKY_DONT_INSTALL_HOOKS: true
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
